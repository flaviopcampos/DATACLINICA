# =============================================================================
# Docker Compose - Stack de Monitoramento DataClinica
# Prometheus, Grafana, Alertmanager, Loki, Jaeger, Node Exporter
# =============================================================================

version: '3.8'

networks:
  monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  dataclinica:
    external: true

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  loki_data:
    driver: local
  jaeger_data:
    driver: local

services:
  # =============================================================================
  # Prometheus - Coleta de Métricas
  # =============================================================================
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: dataclinica-prometheus
    hostname: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.external-url=http://localhost:9090'
      - '--alertmanager.url=http://alertmanager:9093'
    environment:
      - PROMETHEUS_RETENTION_TIME=30d
      - PROMETHEUS_RETENTION_SIZE=10GB
    networks:
      - monitoring
      - dataclinica
    depends_on:
      - alertmanager
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.dataclinica.local`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=monitoring"

  # =============================================================================
  # Alertmanager - Gerenciamento de Alertas
  # =============================================================================
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: dataclinica-alertmanager
    hostname: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./templates:/etc/alertmanager/templates:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--web.route-prefix=/'
      - '--cluster.listen-address=0.0.0.0:9094'
      - '--log.level=info'
    environment:
      - ALERTMANAGER_SLACK_API_URL=${SLACK_API_URL:-}
      - ALERTMANAGER_SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - ALERTMANAGER_SMTP_PORT=${SMTP_PORT:-587}
      - ALERTMANAGER_SMTP_USERNAME=${SMTP_USERNAME:-}
      - ALERTMANAGER_SMTP_PASSWORD=${SMTP_PASSWORD:-}
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.dataclinica.local`)"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
      - "traefik.docker.network=monitoring"

  # =============================================================================
  # Grafana - Visualização e Dashboards
  # =============================================================================
  grafana:
    image: grafana/grafana:10.1.0
    container_name: dataclinica-grafana
    hostname: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      # Configurações básicas
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_SECURITY_ADMIN_EMAIL=${GRAFANA_ADMIN_EMAIL:-admin@dataclinica.com.br}
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY:-SW2YcwTIb9zpOOhoPsMm}
      
      # Configurações de servidor
      - GF_SERVER_DOMAIN=${GRAFANA_DOMAIN:-localhost}
      - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL:-http://localhost:3000/}
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      
      # Configurações de usuários
      - GF_USERS_ALLOW_SIGN_UP=${GRAFANA_ALLOW_SIGN_UP:-false}
      - GF_USERS_ALLOW_ORG_CREATE=${GRAFANA_ALLOW_ORG_CREATE:-false}
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Viewer
      - GF_USERS_DEFAULT_THEME=dark
      
      # Configurações de autenticação anônima
      - GF_AUTH_ANONYMOUS_ENABLED=${GRAFANA_ANONYMOUS_ENABLED:-false}
      - GF_AUTH_ANONYMOUS_ORG_ROLE=${GRAFANA_ANONYMOUS_ORG_ROLE:-Viewer}
      
      # Configurações de banco de dados
      - GF_DATABASE_TYPE=${GRAFANA_DB_TYPE:-sqlite3}
      - GF_DATABASE_HOST=${GRAFANA_DB_HOST:-}
      - GF_DATABASE_NAME=${GRAFANA_DB_NAME:-grafana}
      - GF_DATABASE_USER=${GRAFANA_DB_USER:-}
      - GF_DATABASE_PASSWORD=${GRAFANA_DB_PASSWORD:-}
      
      # Configurações de cache
      - GF_REMOTE_CACHE_TYPE=${GRAFANA_CACHE_TYPE:-database}
      
      # Configurações de sessão
      - GF_SESSION_PROVIDER=${GRAFANA_SESSION_PROVIDER:-file}
      - GF_SESSION_COOKIE_SECURE=${GRAFANA_COOKIE_SECURE:-false}
      
      # Configurações de SMTP
      - GF_SMTP_ENABLED=${GRAFANA_SMTP_ENABLED:-false}
      - GF_SMTP_HOST=${GRAFANA_SMTP_HOST:-localhost:587}
      - GF_SMTP_USER=${GRAFANA_SMTP_USER:-}
      - GF_SMTP_PASSWORD=${GRAFANA_SMTP_PASSWORD:-}
      - GF_SMTP_FROM_ADDRESS=${GRAFANA_SMTP_FROM_ADDRESS:-admin@dataclinica.com.br}
      - GF_SMTP_FROM_NAME=${GRAFANA_SMTP_FROM_NAME:-DataClinica Grafana}
      
      # Configurações de logging
      - GF_LOG_MODE=${GRAFANA_LOG_MODE:-console}
      - GF_LOG_LEVEL=${GRAFANA_LOG_LEVEL:-info}
      
      # Configurações de métricas
      - GF_METRICS_ENABLED=${GRAFANA_METRICS_ENABLED:-true}
      
      # Configurações de alerting
      - GF_ALERTING_ENABLED=${GRAFANA_ALERTING_ENABLED:-true}
      - GF_UNIFIED_ALERTING_ENABLED=${GRAFANA_UNIFIED_ALERTING_ENABLED:-true}
      
      # Configurações de explore
      - GF_EXPLORE_ENABLED=${GRAFANA_EXPLORE_ENABLED:-true}
      
      # Configurações de plugins
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel,redis-datasource,postgres-datasource
      
      # Configurações de rendering
      - GF_RENDERING_SERVER_URL=${GRAFANA_RENDERER_URL:-}
      - GF_RENDERING_CALLBACK_URL=${GRAFANA_RENDERER_CALLBACK_URL:-}
    networks:
      - monitoring
      - dataclinica
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.dataclinica.local`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=monitoring"

  # =============================================================================
  # Loki - Agregação de Logs
  # =============================================================================
  loki:
    image: grafana/loki:2.9.0
    container_name: dataclinica-loki
    hostname: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./loki/loki.yml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    environment:
      - LOKI_RETENTION_PERIOD=30d
    networks:
      - monitoring
      - dataclinica
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.loki.rule=Host(`loki.dataclinica.local`)"
      - "traefik.http.services.loki.loadbalancer.server.port=3100"
      - "traefik.docker.network=monitoring"

  # =============================================================================
  # Promtail - Coleta de Logs
  # =============================================================================
  promtail:
    image: grafana/promtail:2.9.0
    container_name: dataclinica-promtail
    hostname: promtail
    restart: unless-stopped
    volumes:
      - ./loki/promtail.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
      - dataclinica
    depends_on:
      - loki
    labels:
      - "traefik.enable=false"

  # =============================================================================
  # Jaeger - Distributed Tracing
  # =============================================================================
  jaeger:
    image: jaegertracing/all-in-one:1.49
    container_name: dataclinica-jaeger
    hostname: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector HTTP
      - "14250:14250"  # Jaeger collector gRPC
      - "6831:6831/udp"  # Jaeger agent UDP
      - "6832:6832/udp"  # Jaeger agent UDP
    volumes:
      - jaeger_data:/badger
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
      - BADGER_SPAN_STORE_TTL=72h
    networks:
      - monitoring
      - dataclinica
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jaeger.rule=Host(`jaeger.dataclinica.local`)"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"
      - "traefik.docker.network=monitoring"

  # =============================================================================
  # Node Exporter - Métricas do Sistema
  # =============================================================================
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: dataclinica-node-exporter
    hostname: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.systemd'
      - '--collector.processes'
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  # =============================================================================
  # cAdvisor - Métricas de Containers
  # =============================================================================
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: dataclinica-cadvisor
    hostname: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  # =============================================================================
  # Blackbox Exporter - Monitoramento de Endpoints
  # =============================================================================
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: dataclinica-blackbox-exporter
    hostname: blackbox-exporter
    restart: unless-stopped
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
      - '--web.listen-address=:9115'
      - '--log.level=info'
    networks:
      - monitoring
      - dataclinica
    labels:
      - "traefik.enable=false"

  # =============================================================================
  # Redis Exporter - Métricas do Redis
  # =============================================================================
  redis-exporter:
    image: oliver006/redis_exporter:v1.54.0
    container_name: dataclinica-redis-exporter
    hostname: redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=${REDIS_URL:-redis://redis:6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    networks:
      - monitoring
      - dataclinica
    labels:
      - "traefik.enable=false"

  # =============================================================================
  # Postgres Exporter - Métricas do PostgreSQL
  # =============================================================================
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.13.2
    container_name: dataclinica-postgres-exporter
    hostname: postgres-exporter
    restart: unless-stopped
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=${POSTGRES_EXPORTER_URL:-postgresql://postgres:password@postgres:5432/dataclinica?sslmode=disable}
      - PG_EXPORTER_EXTEND_QUERY_PATH=/etc/postgres_exporter/queries.yaml
    volumes:
      - ./postgres/queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    networks:
      - monitoring
      - dataclinica
    labels:
      - "traefik.enable=false"

  # =============================================================================
  # Nginx Exporter - Métricas do Nginx
  # =============================================================================
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: dataclinica-nginx-exporter
    hostname: nginx-exporter
    restart: unless-stopped
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://nginx:8080/nginx_status'
      - '-web.listen-address=:9113'
      - '-web.telemetry-path=/metrics'
    networks:
      - monitoring
      - dataclinica
    labels:
      - "traefik.enable=false"

  # =============================================================================
  # Grafana Image Renderer - Renderização de Imagens
  # =============================================================================
  grafana-image-renderer:
    image: grafana/grafana-image-renderer:3.8.1
    container_name: dataclinica-grafana-renderer
    hostname: grafana-renderer
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ENABLE_METRICS=true
      - HTTP_PORT=8081
      - LOG_LEVEL=info
      - RENDERING_MODE=default
      - RENDERING_ARGS=--no-sandbox,--disable-gpu,--disable-dev-shm-usage,--disable-setuid-sandbox,--disable-extensions
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  # =============================================================================
  # Traefik - Proxy Reverso e Load Balancer
  # =============================================================================
  traefik:
    image: traefik:v3.0
    container_name: dataclinica-traefik
    hostname: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8090:8080"  # Dashboard do Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic:/etc/traefik/dynamic:ro
      - ./traefik/certs:/etc/traefik/certs:ro
    command:
      - '--api.dashboard=true'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.file.directory=/etc/traefik/dynamic'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--log.level=INFO'
      - '--accesslog=true'
      - '--metrics.prometheus=true'
      - '--metrics.prometheus.addEntryPointsLabels=true'
      - '--metrics.prometheus.addServicesLabels=true'
    networks:
      - monitoring
      - dataclinica
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.dataclinica.local`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.docker.network=monitoring"

# =============================================================================
# Configurações de Healthcheck Global
# =============================================================================
x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

# =============================================================================
# Configurações de Logging Global
# =============================================================================
x-logging-defaults: &logging-defaults
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

# =============================================================================
# Configurações de Restart Global
# =============================================================================
x-restart-policy: &restart-policy
  restart: unless-stopped