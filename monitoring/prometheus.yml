# =============================================================================
# Configuração do Prometheus - DataClinica
# Monitoramento de métricas da aplicação e infraestrutura
# =============================================================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'dataclinica'
    environment: '${ENVIRONMENT:-development}'
    region: '${AWS_REGION:-us-east-1}'

# Configuração de alertas
rule_files:
  - "rules/*.yml"
  - "alerts/*.yml"

# Configuração do Alertmanager
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v2

# Configuração de scraping
scrape_configs:
  # =============================================================================
  # Monitoramento do Prometheus
  # =============================================================================
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # =============================================================================
  # Monitoramento da Aplicação Backend (FastAPI)
  # =============================================================================
  - job_name: 'dataclinica-backend'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: backend:8000
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'dataclinica_(.*)'
        target_label: __name__
        replacement: '${1}'
      - source_labels: [job]
        target_label: service
        replacement: 'backend'

  # =============================================================================
  # Monitoramento do Frontend (Nginx)
  # =============================================================================
  - job_name: 'dataclinica-frontend'
    static_configs:
      - targets: ['frontend:80']
    scrape_interval: 30s
    metrics_path: /nginx_status
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'frontend'

  # =============================================================================
  # Monitoramento do Banco de Dados (PostgreSQL)
  # =============================================================================
  - job_name: 'dataclinica-database'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'database'
      - source_labels: [__name__]
        regex: 'pg_(.*)'
        target_label: __name__
        replacement: 'postgres_${1}'

  # =============================================================================
  # Monitoramento do Redis
  # =============================================================================
  - job_name: 'dataclinica-redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'redis'
      - source_labels: [__name__]
        regex: 'redis_(.*)'
        target_label: __name__
        replacement: 'redis_${1}'

  # =============================================================================
  # Monitoramento do Node Exporter (Sistema)
  # =============================================================================
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'system'
      - source_labels: [__name__]
        regex: 'node_(.*)'
        target_label: __name__
        replacement: 'system_${1}'

  # =============================================================================
  # Monitoramento do cAdvisor (Containers)
  # =============================================================================
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'containers'
      - source_labels: [__name__]
        regex: 'container_(.*)'
        target_label: __name__
        replacement: 'container_${1}'
      - source_labels: [container_label_com_docker_compose_service]
        target_label: compose_service
      - source_labels: [container_label_com_docker_compose_project]
        target_label: compose_project

  # =============================================================================
  # Monitoramento do Nginx (Proxy Reverso)
  # =============================================================================
  - job_name: 'nginx-proxy'
    static_configs:
      - targets: ['nginx:9113']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'proxy'
      - source_labels: [__name__]
        regex: 'nginx_(.*)'
        target_label: __name__
        replacement: 'nginx_${1}'

  # =============================================================================
  # Monitoramento de Blackbox (Health Checks)
  # =============================================================================
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://frontend:80/health
        - http://backend:8000/health
        - http://backend:8000/api/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
    scrape_interval: 30s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'health_check'

  # =============================================================================
  # Monitoramento de SSL/TLS
  # =============================================================================
  - job_name: 'blackbox-ssl'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - dataclinica.com.br:443
        - staging.dataclinica.com.br:443
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
    scrape_interval: 300s  # 5 minutos
    scrape_timeout: 30s
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'ssl_check'

  # =============================================================================
  # Monitoramento de DNS
  # =============================================================================
  - job_name: 'blackbox-dns'
    metrics_path: /probe
    params:
      module: [dns_dataclinica]
    static_configs:
      - targets:
        - dataclinica.com.br
        - staging.dataclinica.com.br
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
    scrape_interval: 300s  # 5 minutos
    scrape_timeout: 30s
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'dns_check'

  # =============================================================================
  # Monitoramento AWS CloudWatch (se configurado)
  # =============================================================================
  - job_name: 'cloudwatch-exporter'
    static_configs:
      - targets: ['cloudwatch-exporter:9106']
    scrape_interval: 300s  # 5 minutos
    scrape_timeout: 60s
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'aws'
      - source_labels: [__name__]
        regex: 'aws_(.*)'
        target_label: __name__
        replacement: 'aws_${1}'

  # =============================================================================
  # Monitoramento de Logs (se usando Loki)
  # =============================================================================
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    scrape_interval: 60s
    metrics_path: /metrics
    metric_relabel_configs:
      - source_labels: [job]
        target_label: service
        replacement: 'logs'

# =============================================================================
# Configurações de Armazenamento
# =============================================================================
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true
    min-block-duration: 2h
    max-block-duration: 25h

# =============================================================================
# Configurações de Performance
# =============================================================================
query:
  max_concurrency: 20
  timeout: 2m
  max_samples: 50000000
  lookback-delta: 5m

# =============================================================================
# Configurações de Logging
# =============================================================================
log:
  level: info
  format: json

# =============================================================================
# Configurações de Web
# =============================================================================
web:
  console.templates: /etc/prometheus/consoles
  console.libraries: /etc/prometheus/console_libraries
  enable-lifecycle: true
  enable-admin-api: true
  max-connections: 512
  read-timeout: 30s
  route-prefix: /

# =============================================================================
# Configurações de Remote Write (para backup/replicação)
# =============================================================================
# remote_write:
#   - url: "https://prometheus-remote-write.example.com/api/v1/write"
#     basic_auth:
#       username: "dataclinica"
#       password: "${REMOTE_WRITE_PASSWORD}"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# =============================================================================
# Configurações de Remote Read (para consultas federadas)
# =============================================================================
# remote_read:
#   - url: "https://prometheus-remote-read.example.com/api/v1/read"
#     basic_auth:
#       username: "dataclinica"
#       password: "${REMOTE_READ_PASSWORD}"
#     read_recent: true