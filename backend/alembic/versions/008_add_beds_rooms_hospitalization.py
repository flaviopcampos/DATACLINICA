"""Add beds, rooms and hospitalization models

Revision ID: 008
Revises: 3f4e789dea4a
Create Date: 2025-01-18 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '008'
down_revision = '3f4e789dea4a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create user_roles table
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_roles_id'), 'user_roles', ['id'], unique=False)
    
    # Create modules table
    op.create_table('modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_modules_id'), 'modules', ['id'], unique=False)
    op.create_index(op.f('ix_modules_name'), 'modules', ['name'], unique=True)
    
    # Create role_permissions table
    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('can_create', sa.Boolean(), nullable=True),
    sa.Column('can_read', sa.Boolean(), nullable=True),
    sa.Column('can_update', sa.Boolean(), nullable=True),
    sa.Column('can_delete', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['user_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_permissions_id'), 'role_permissions', ['id'], unique=False)
    
    # Create user_role_assignments table
    op.create_table('user_role_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('assigned_by', sa.Integer(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['user_roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_role_assignments_id'), 'user_role_assignments', ['id'], unique=False)
    
    # Create rooms table
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('room_number', sa.String(length=20), nullable=False),
    sa.Column('room_type', sa.String(length=50), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('floor', sa.String(length=10), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amenities', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rooms_id'), 'rooms', ['id'], unique=False)
    op.create_index(op.f('ix_rooms_room_number'), 'rooms', ['room_number'], unique=False)
    
    # Create beds table
    op.create_table('beds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('bed_number', sa.String(length=20), nullable=False),
    sa.Column('bed_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('equipment', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_beds_bed_number'), 'beds', ['bed_number'], unique=False)
    op.create_index(op.f('ix_beds_id'), 'beds', ['id'], unique=False)
    
    # Create bed_status_history table
    op.create_table('bed_status_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bed_id', sa.Integer(), nullable=False),
    sa.Column('previous_status', sa.String(length=30), nullable=True),
    sa.Column('new_status', sa.String(length=30), nullable=False),
    sa.Column('changed_by', sa.Integer(), nullable=False),
    sa.Column('change_reason', sa.Text(), nullable=True),
    sa.Column('changed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bed_id'], ['beds.id'], ),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bed_status_history_id'), 'bed_status_history', ['id'], unique=False)
    
    # Create daily_rate_configs table
    op.create_table('daily_rate_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('room_type', sa.String(length=50), nullable=True),
    sa.Column('bed_type', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_rate_configs_id'), 'daily_rate_configs', ['id'], unique=False)
    
    # Create daily_rate_tiers table
    op.create_table('daily_rate_tiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_id', sa.Integer(), nullable=False),
    sa.Column('min_days', sa.Integer(), nullable=False),
    sa.Column('max_days', sa.Integer(), nullable=True),
    sa.Column('daily_rate', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['config_id'], ['daily_rate_configs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_rate_tiers_id'), 'daily_rate_tiers', ['id'], unique=False)
    
    # Create patient_admissions table
    op.create_table('patient_admissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('bed_id', sa.Integer(), nullable=False),
    sa.Column('admission_date', sa.DateTime(), nullable=False),
    sa.Column('expected_discharge_date', sa.DateTime(), nullable=True),
    sa.Column('actual_discharge_date', sa.DateTime(), nullable=True),
    sa.Column('admission_type', sa.String(length=50), nullable=False),
    sa.Column('admission_reason', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('attending_doctor_id', sa.Integer(), nullable=True),
    sa.Column('discharge_reason', sa.Text(), nullable=True),
    sa.Column('discharge_summary', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['attending_doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['bed_id'], ['beds.id'], ),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patient_admissions_id'), 'patient_admissions', ['id'], unique=False)
    
    # Create bed_transfers table
    op.create_table('bed_transfers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admission_id', sa.Integer(), nullable=False),
    sa.Column('from_bed_id', sa.Integer(), nullable=False),
    sa.Column('to_bed_id', sa.Integer(), nullable=False),
    sa.Column('transfer_date', sa.DateTime(), nullable=False),
    sa.Column('transfer_reason', sa.Text(), nullable=True),
    sa.Column('authorized_by', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admission_id'], ['patient_admissions.id'], ),
    sa.ForeignKeyConstraint(['authorized_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['from_bed_id'], ['beds.id'], ),
    sa.ForeignKeyConstraint(['to_bed_id'], ['beds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bed_transfers_id'), 'bed_transfers', ['id'], unique=False)
    
    # Create admission_billing table
    op.create_table('admission_billing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('admission_id', sa.Integer(), nullable=False),
    sa.Column('billing_date', sa.DateTime(), nullable=False),
    sa.Column('total_days', sa.Integer(), nullable=False),
    sa.Column('daily_rate', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('accommodation_total', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('services_total', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('medications_total', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('other_charges', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('discounts', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('payment_status', sa.String(length=30), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admission_id'], ['patient_admissions.id'], ),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admission_billing_id'), 'admission_billing', ['id'], unique=False)
    
    # Create billing_items table
    op.create_table('billing_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('billing_id', sa.Integer(), nullable=False),
    sa.Column('item_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('service_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['billing_id'], ['admission_billing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_billing_items_id'), 'billing_items', ['id'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_billing_items_id'), table_name='billing_items')
    op.drop_table('billing_items')
    op.drop_index(op.f('ix_admission_billing_id'), table_name='admission_billing')
    op.drop_table('admission_billing')
    op.drop_index(op.f('ix_bed_transfers_id'), table_name='bed_transfers')
    op.drop_table('bed_transfers')
    op.drop_index(op.f('ix_patient_admissions_id'), table_name='patient_admissions')
    op.drop_table('patient_admissions')
    op.drop_index(op.f('ix_daily_rate_tiers_id'), table_name='daily_rate_tiers')
    op.drop_table('daily_rate_tiers')
    op.drop_index(op.f('ix_daily_rate_configs_id'), table_name='daily_rate_configs')
    op.drop_table('daily_rate_configs')
    op.drop_index(op.f('ix_bed_status_history_id'), table_name='bed_status_history')
    op.drop_table('bed_status_history')
    op.drop_index(op.f('ix_beds_id'), table_name='beds')
    op.drop_index(op.f('ix_beds_bed_number'), table_name='beds')
    op.drop_table('beds')
    op.drop_index(op.f('ix_rooms_room_number'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_id'), table_name='rooms')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_user_role_assignments_id'), table_name='user_role_assignments')
    op.drop_table('user_role_assignments')
    op.drop_index(op.f('ix_role_permissions_id'), table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_modules_name'), table_name='modules')
    op.drop_index(op.f('ix_modules_id'), table_name='modules')
    op.drop_table('modules')
    op.drop_index(op.f('ix_user_roles_id'), table_name='user_roles')
    op.drop_table('user_roles')
    # ### end Alembic commands ###